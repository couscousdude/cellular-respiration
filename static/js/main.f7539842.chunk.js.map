{"version":3,"sources":["components/Navbar.js","components/Home.js","components/Footer.js","components/NotFound.js","components/Learn/Timeline.js","components/Learn/Faq.js","components/Learn/faqContent.js","components/Learn/timelineContent.js","components/Learn/Vocabulary.js","components/Learn/vocabContent.js","components/BackToTop.js","components/Learn/Learn.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","root","alignItems","buttonContainer","marginLeft","Navbar","props","classes","AppBar","position","className","Toolbar","Typography","variant","align","container","margin","top","left","transform","title","fontWeight","button","marginTop","Home","history","useHistory","Grid","justify","item","xl","xs","md","sm","lg","Button","color","onClick","push","component","Link","startIcon","href","target","rel","footer","bottom","width","backgroundColor","zIndex","Footer","children","Divider","style","height","NotFound","theme","paper","padding","secondaryTail","palette","secondary","main","CustomizedTimeline","content","Timeline","map","i","TimelineItem","TimelineOppositeContent","caption","TimelineSeparator","TimelineDot","icon","length","TimelineConnector","TimelineContent","Paper","elevation","body","heading","fontSize","typography","pxToRem","fontWeightRegular","Faq","spacing","question","Accordion","AccordionSummary","expandIcon","aria-controls","id","AccordionDetails","answer","Filter1Icon","HelpIcon","Filter2Icon","PriorityHighIcon","Filter3Icon","Vocabulary","vocabContent","Card","CardContent","word","definition","right","ScrollTop","anchor","scrollAnchor","document","querySelector","anchorCoords","element","xPosition","yPosition","offsetLeft","scrollLeft","clientLeft","offsetTop","scrollTop","clientTop","offsetParent","x","y","getPosition","trigger","useScrollTrigger","window","disableHysteresis","threshold","Zoom","in","scrollIntoView","behavior","block","role","BackToTop","bottomOffset","marginBottom","Fab","aria-label","defaultProps","Learn","faqContent","timelineContent","innerWidth","createMuiTheme","primary","purple","responsiveFontSizes","App","ThemeProvider","exact","path","render","to","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f7539842.chunk.js","sourcesContent":["import { AppBar, Toolbar, Typography, Button } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        alignItems: 'center',\r\n    },\r\n    buttonContainer: {\r\n        alignItems: 'left',\r\n        marginLeft: 0\r\n    }\r\n});\r\n\r\nfunction Navbar(props) {\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <AppBar position='fixed' className={classes.root}>\r\n            <Toolbar>\r\n                <Typography variant='h6' align='center'>\r\n                    Cellular Respiration\r\n                </Typography>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport { Button, Typography, Link, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    container: {\r\n        margin: 0,\r\n        position: 'absolute',\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%, -50%)'\r\n    },\r\n    title: {\r\n        fontWeight: '600'\r\n    },\r\n    button: {\r\n        transform: 'translateX(-50%)',\r\n        left: '50%',\r\n        marginTop: '20px'\r\n    }\r\n})\r\n\r\nfunction Home(props) {\r\n    const classes = useStyles();\r\n    let history = useHistory();\r\n\r\n    const handleButtonPress = () => {\r\n        history.push('/learn');\r\n    }\r\n\r\n    return(\r\n        <div className={classes.container}>\r\n            <Typography align='center' variant='h1' className={classes.title}>\r\n                Cellular Respiration\r\n            </Typography>\r\n            <Typography align='center' variant='h3'>\r\n                By Youwen Wu\r\n            </Typography>\r\n            <Grid justify='center'>\r\n                <Grid item xl={12} xs={12} md={12} sm={12} lg={12}>\r\n                    <Button variant='contained' color='primary' className={classes.button} onClick={handleButtonPress}>\r\n                        Learn   \r\n                    </Button>\r\n                </Grid>\r\n                <Grid item xl={12} xs={12} md={12} sm={12} lg={12}>\r\n                    <Button \r\n                        variant='outlined' \r\n                        color='secondary' \r\n                        className={classes.button} \r\n                        component={Link}\r\n                        startIcon={<GitHubIcon />}\r\n                        href='https://www.github.com/couscousdude/cellular-respiration'\r\n                        target='_blank'\r\n                        rel='noreferrer noopener'\r\n                    >\r\n                        Code\r\n                    </Button>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Divider } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles({\r\n    footer: {\r\n        position: 'fixed',\r\n        left: 0,\r\n        bottom: 0,\r\n        width: '100%',\r\n        backgroundColor: 'white',\r\n        color: 'black',\r\n        zIndex: 1\r\n    }\r\n});\r\n\r\nconst Footer = (props) => {\r\n    const { children } = props;\r\n    const classes = useStyles();\r\n\r\n    return(\r\n        <div className={classes.footer}>\r\n            <footer>\r\n                <Divider />\r\n                    { children \r\n                        ? children\r\n                        : <div style={{height:'30px'}}></div> }\r\n            </footer>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\nimport { Typography, Link } from '@material-ui/core';\r\n\r\nexport default function NotFound(props) {\r\n    return (\r\n        <div style={{marginTop: 20}}>\r\n            <Typography variant='h3' align='center'>\r\n                <Link\r\n                    href='https://developer.mozilla.org/en-US/docs/Web/HTTP/Status/404'\r\n                    target='__blank'\r\n                    rel='noopener noreferrer'\r\n                    style={{color: '#3b7fff', fontWeight: '500'}}\r\n                >\r\n                    Error 404\r\n                </Link>\r\n            </Typography>\r\n            <Typography variant='h5' style={{color: 'grey', marginTop: 20}} align='center'>\r\n                The requested resource was not found on this server\r\n            </Typography>\r\n        </div>\r\n    )\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Timeline from '@material-ui/lab/Timeline';\r\nimport TimelineItem from '@material-ui/lab/TimelineItem';\r\nimport TimelineSeparator from '@material-ui/lab/TimelineSeparator';\r\nimport TimelineConnector from '@material-ui/lab/TimelineConnector';\r\nimport TimelineContent from '@material-ui/lab/TimelineContent';\r\nimport TimelineOppositeContent from '@material-ui/lab/TimelineOppositeContent';\r\nimport TimelineDot from '@material-ui/lab/TimelineDot';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        padding: '6px 16px',\r\n    },\r\n    secondaryTail: {\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n}));\r\n\r\nfunction CustomizedTimeline(props) {\r\n    const { content } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <Timeline align=\"alternate\">\r\n            { content.map((item, i) => (\r\n                <TimelineItem>\r\n                <TimelineOppositeContent>\r\n                { item.caption\r\n                ? ( <Typography variant=\"h5\">\r\n                        {item.caption}\r\n                    </Typography> ) : null }\r\n                </TimelineOppositeContent>\r\n                <TimelineSeparator>\r\n                <TimelineDot color={item.caption ? 'primary' : 'grey'}>\r\n                    <item.icon />\r\n                </TimelineDot>\r\n                { i !== content.length - 1\r\n                    ? <TimelineConnector /> : null }\r\n                </TimelineSeparator>\r\n                <TimelineContent>\r\n                <Paper elevation={3} className={classes.paper}>\r\n                    <Typography variant=\"h6\" component=\"h1\">\r\n                        {item.title}\r\n                    </Typography>\r\n                    <Typography>{item.body}</Typography>\r\n                </Paper>\r\n                </TimelineContent>\r\n            </TimelineItem>\r\n            ))}\r\n        {/* <TimelineItem>\r\n            <TimelineOppositeContent>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n                10:00 am\r\n            </Typography>\r\n            </TimelineOppositeContent>\r\n            <TimelineSeparator>\r\n            <TimelineDot color=\"primary\">\r\n                <LaptopMacIcon />\r\n            </TimelineDot>\r\n            <TimelineConnector />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <Typography variant=\"h6\" component=\"h1\">\r\n                play video games\r\n                </Typography>\r\n                <Typography>Because it&apos;s awesome!</Typography>\r\n            </Paper>\r\n            </TimelineContent>\r\n        </TimelineItem>\r\n        <TimelineItem>\r\n            <TimelineSeparator>\r\n            <TimelineDot color=\"primary\" variant=\"outlined\">\r\n                <HotelIcon />\r\n            </TimelineDot>\r\n            <TimelineConnector className={classes.secondaryTail} />\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <Typography variant=\"h6\" component=\"h1\">\r\n                Sleep\r\n                </Typography>\r\n                <Typography>Because you need rest</Typography>\r\n            </Paper>\r\n            </TimelineContent>\r\n        </TimelineItem>\r\n        <TimelineItem>\r\n            <TimelineSeparator>\r\n            <TimelineDot color=\"secondary\">\r\n                <RepeatIcon />\r\n            </TimelineDot>\r\n            </TimelineSeparator>\r\n            <TimelineContent>\r\n            <Paper elevation={3} className={classes.paper}>\r\n                <Typography variant=\"h6\" component=\"h1\">\r\n                Repeat\r\n                </Typography>\r\n                <Typography>Because this is the life you love!</Typography>\r\n            </Paper>\r\n            </TimelineContent>\r\n        </TimelineItem> */}\r\n        </Timeline>\r\n    );\r\n}\r\n\r\nexport default CustomizedTimeline;\r\nCustomizedTimeline.propTypes = {\r\n    content: PropTypes.array.isRequired\r\n}","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport PropTypes from 'prop-types';\r\nimport { Grid } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n    },\r\n    heading: {\r\n        fontSize: theme.typography.pxToRem(15),\r\n        fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n}));\r\n\r\nfunction Faq(props) {\r\n    const { content } = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <Grid justify='center' container spacing={3}>\r\n                { content.map(question => (\r\n                    <Grid item xl={5} lg={5} md={7} sm={12} xs={12} >\r\n                        <Accordion>\r\n                            <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                            >\r\n                                <Typography className={classes.heading}>{question.question}</Typography>\r\n                            </AccordionSummary>\r\n                            <AccordionDetails>\r\n                                <Typography>\r\n                                    {question.answer}\r\n                                </Typography>\r\n                            </AccordionDetails>\r\n                        </Accordion>\r\n                    </Grid>\r\n                ))}\r\n            </Grid>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Faq;\r\nFaq.propTypes = {\r\n    content: PropTypes.array.isRequired\r\n}","// format:\r\n// question: str\r\n// answer: str\r\nconst content = [\r\n    {\r\n        question: 'What is Cellular Respiration?',\r\n        answer: 'Cellular respiration is a set of metabolic processes that take place in the cells of organisms to convert chemical energy from oxygen molecules or nutrients into adenosine triphosphate (ATP) molecules.'\r\n    },\r\n    {\r\n        question: 'What are ATP molecules?',\r\n        answer: 'ATP molecules (aka adenosine triphosphate) are molecules that store energy inside cells. ATP is a nucleotide that consists of an adenine base, attached to a ribose sugar, that is attached to 3 phosphate groups.'\r\n    },\r\n    {\r\n        question: 'What are the Waste Products of Cellular Respiration?',\r\n        answer: 'Cellular respiration produces carbon dioxide, or CO2 as a waste product'\r\n    },\r\n    {\r\n        question: 'Where does Cellular Respiration Begin?',\r\n        answer: 'Cellular respiration begins in the cytoplasm of cells, but most of the reactions actually occur inside the mitochondria, which has been dubbed \\\"The Powerhouse of the Cell\\\"'\r\n    },\r\n    {\r\n        question: 'Where are the mitochondria?',\r\n        answer: 'The mitochondria are located within the fluid that surrounds the nucleus, the cytoplasm.'\r\n    },\r\n    {\r\n        'question': 'What is the Equation for Cellular Respiration?',\r\n        answer: 'The equation for cellular respiration is C6H12O6 + 6O2 → 6CO2 + 6H2O.'\r\n    }\r\n];\r\n\r\nexport default content;","// Format: \r\n// title: str\r\n// body: str\r\n// icon: Icon component\r\nimport HelpIcon from '@material-ui/icons/Help';\r\nimport Filter1Icon from '@material-ui/icons/Filter1';\r\nimport Filter2Icon from '@material-ui/icons/Filter2';\r\nimport Filter3Icon from '@material-ui/icons/Filter3';\r\nimport PriorityHighIcon from '@material-ui/icons/PriorityHigh';\r\n\r\nconst content = [\r\n    {\r\n        title: 'Glucose breaks down',\r\n        body: 'During glycolysis, glucose is broken down into pyruvate, and 2 ATP molecules are formed.',\r\n        icon: Filter1Icon,\r\n        caption: 'Step 1: Glycolysis'\r\n    },\r\n    {\r\n        title: 'An anerobic process',\r\n        body: 'Glycolysis is anaerobic, which means it doesn\\'t require or use any oxygen.',\r\n        icon: HelpIcon\r\n    },\r\n    {\r\n        title: 'Releasing stored energy',\r\n        body: 'The pyruvate produced from glycolysis feeds the Krebs cycle, which also produces 2 molecules of ATP.',\r\n        icon: Filter2Icon,\r\n        caption: 'Step 2: The Krebs Cycle'\r\n    },\r\n    {\r\n        title: 'An aerobic process',\r\n        body: 'The Krebs cycle is an aerobic process, the opposite of anaerobic. It means that oxygen is required for the process.',\r\n        icon: HelpIcon\r\n    },\r\n    {\r\n        title: 'Did you know?',\r\n        body: 'The Krebs cycle is named after a German chemist Hans Krebs, who contributed greatly to modern understanding of metabolism.',\r\n        icon: PriorityHighIcon\r\n    },\r\n    {\r\n        title: 'Producing more ATP',\r\n        body: 'The electron transport uses the 4 previous ATP molecules created from glycolysis and the Krebs cycle to generate vastly more ATP molecules, up to 34.',\r\n        icon: Filter3Icon,\r\n        caption: 'Step 3: Electron Transport'\r\n    },\r\n    {\r\n        title: 'Forming water',\r\n        body: 'The electron transport is considered an aerobic process, like the Krebs cycle. The electron transport bonds the oxygen with hydrogen to create water, or H2O.',\r\n        icon: HelpIcon\r\n    },\r\n    {\r\n        title: 'Waste products',\r\n        body: 'Cellular respiration produces carbon dioxide, or CO2, as a waste product.',\r\n        icon: HelpIcon\r\n    },\r\n    {\r\n        title: 'Did you know?',\r\n        body: 'Not all cells use cellular respiration. Some cells use a combination of glycolysis and fermentation instead.',\r\n        icon: PriorityHighIcon\r\n    },\r\n]\r\n\r\nexport default content;","import React from 'react';\r\nimport { Card, CardContent, Grid, Typography } from '@material-ui/core';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Vocabulary = (props) => {\r\n    const { vocabContent } = props;\r\n    \r\n    return (\r\n        <Grid container justify='center' spacing={3}>\r\n            { vocabContent.map(item => (\r\n            <Grid item xl={5} lg={5} md={5} sm={8} xs={11}>\r\n                <Card>\r\n                    <CardContent>\r\n                        <Typography variant='h6'>\r\n                            {item.word}\r\n                        </Typography>\r\n                        <Typography variant='body1'>\r\n                            {item.definition}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </Card>\r\n            </Grid>\r\n            ))}\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Vocabulary;\r\nVocabulary.propTypes = {\r\n    vocabContent: PropTypes.array.isRequired\r\n}","// format\r\n// word: str\r\n// definition: str\r\n\r\nconst content = [\r\n    {\r\n        word: 'ATP',\r\n        definition: 'ATP is short for adenosine triphosphate, and is a form of energy for cells. It\\'s generated using cellular respiration.'\r\n    },\r\n    {\r\n        word: 'Carbon Dioxide',\r\n        definition: 'A waste product produced by cellular respiration. The chemical compound is CO2.'\r\n    },\r\n    {\r\n        word: 'Pyruvate',\r\n        definition: 'A chemical compound outputted by glycolysis. Gives energy to Krebs cycle.'\r\n    },\r\n    {\r\n        word: 'Glycolysis',\r\n        definition: 'Process of breaking glucose down into pyruvate.'\r\n    },\r\n    {\r\n        word: 'Krebs Cycle',\r\n        definition: 'Releases stored energy using pyruvate'\r\n    },\r\n    {\r\n        word: 'Electron Transport',\r\n        definition: 'Uses ATP to produce more ATP for cells. Uses ATP previously generated by Krebs cycle and glycolysis to function.'\r\n    },\r\n];\r\nexport default content;","import React from 'react';\r\nimport { useScrollTrigger, Fab, Zoom } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        position: 'fixed',\r\n        bottom: theme.spacing(2),\r\n        right: theme.spacing(2),\r\n    },\r\n}));\r\n\r\nfunction getPosition(element) {\r\n    let xPosition = 0;\r\n    let yPosition = 0;\r\n\r\n    while (element) {\r\n        xPosition += (element.offsetLeft - element.scrollLeft + element.clientLeft);\r\n        yPosition += (element.offsetTop - element.scrollTop + element.clientTop);\r\n        element = element.offsetParent;\r\n    }\r\n\r\n    return { x: xPosition, y: yPosition };\r\n}\r\n\r\nfunction ScrollTop(props) {\r\n    const { children, anchor } = props;\r\n    const classes = useStyles();\r\n\r\n    const scrollAnchor = document.querySelector(anchor);\r\n    const anchorCoords = getPosition(scrollAnchor);\r\n\r\n    const trigger = useScrollTrigger({\r\n        target: window,\r\n        disableHysteresis: true,\r\n        threshold: anchorCoords.y + 100,\r\n    });\r\n\r\n    const handleClick = () => {\r\n        if (scrollAnchor) {\r\n            scrollAnchor.scrollIntoView({ behavior: 'smooth', block: 'start' });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Zoom in={trigger}>\r\n            <div onClick={handleClick} role='presentation' className={classes.root}>\r\n                {children}\r\n            </div>\r\n        </Zoom>\r\n    );\r\n}\r\n\r\nScrollTop.propTypes = {\r\n    children: PropTypes.element.isRequired,\r\n    anchor: PropTypes.string.isRequired\r\n}\r\n\r\nfunction BackToTop(props) {\r\n    const { bottomOffset } = props;\r\n\r\n    return (\r\n        <ScrollTop {...props}>\r\n            <div style={{marginBottom: bottomOffset}}>\r\n                <Fab color='primary' aria-label='scroll back to top'>\r\n                    <KeyboardArrowUpIcon />\r\n                </Fab>\r\n            </div>\r\n        </ScrollTop>\r\n    )\r\n}\r\n\r\nBackToTop.propTypes = {\r\n    anchor: PropTypes.string.isRequired,\r\n    bottomOffset: PropTypes.string\r\n}\r\nBackToTop.defaultProps = {\r\n    bottomOffset: '0px'\r\n}\r\n\r\nexport default BackToTop;","import React from 'react';\r\nimport Timeline from './Timeline';\r\nimport Faq from './Faq';\r\nimport faqContent from './faqContent';\r\nimport timelineContent from './timelineContent';\r\nimport { Button, Divider, Typography, Card, CardContent, Grid } from '@material-ui/core';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Vocabulary from './Vocabulary';\r\nimport vocabContent from './vocabContent';\r\nimport BackToTop from '../BackToTop';\r\n\r\nconst Learn = () => {\r\n    const history = useHistory();\r\n\r\n    return (\r\n        <div style={{marginBottom: 40}}>\r\n            <Button \r\n                startIcon={<HomeIcon />} \r\n                style={{marginLeft: 10}} \r\n                onClick={() => history.push('/home')}\r\n            >\r\n                Back to Home Page\r\n            </Button>\r\n            <Grid container justify='center' style={{marginBottom: 30}}>\r\n                <Grid item>\r\n                    <Card variant='outlined'>\r\n                        <CardContent>\r\n                            <Typography variant='h3' align='center' id='learn-anchor'>\r\n                                Frequently Asked Questions About Cellular Respiration\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Faq content={faqContent} />\r\n            <Grid container justify='center' style={{marginTop: 40}}>\r\n                <Grid item>\r\n                    <Card variant='outlined'>\r\n                        <CardContent>\r\n                            <Typography variant='h4' align='center'>\r\n                                Cellular Respiration Process    \r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Timeline content={timelineContent} />\r\n            <Grid container justify='center' style={{marginBottom: 20}}>\r\n                <Grid item>\r\n                    <Card variant='outlined'>\r\n                        <CardContent>\r\n                            <Typography variant='h4' align='center'>\r\n                                Vocabulary\r\n                            </Typography>\r\n                        </CardContent>\r\n                    </Card>\r\n                </Grid>\r\n            </Grid>\r\n            <Vocabulary vocabContent={vocabContent} />\r\n            <BackToTop anchor='#learn-anchor' bottomOffset={window.innerWidth <= 768 ? '60px' : '30px'} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Learn;","import { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom'\nimport Navbar from './components/Navbar';\nimport Home from './components/Home';\nimport Footer from './components/Footer';\nimport { Link, ThemeProvider } from '@material-ui/core';\nimport { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\nimport { purple, orange } from '@material-ui/core/colors';\nimport NotFound from './components/NotFound';\nimport Learn from './components/Learn/Learn';\n\nlet theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: purple[500],\n    }\n  }\n});\n\ntheme = responsiveFontSizes(theme);\n\nfunction App() {\n  return (\n    <ThemeProvider theme={theme}>\n      <Router>\n        <div style={{height: '70px'}}>\n          <Navbar />\n        </div>\n        <div style={{height: '30px'}}>\n          <Footer>\n            <Link \n              align='left'\n              style={{marginLeft: 20}}\n              variant='body1'\n              href='https://www.github.com/couscousdude'\n              rel='noopener noreferrer'\n              target='_blank'\n            >\n                Designed by Youwen Wu\n            </Link>\n          </Footer>\n        </div>\n        <Switch>\n          <Route \n            exact \n            path='/' \n            render={() => (\n              <Redirect to='/home' />\n            )}\n          />\n          <Route exact path='/home' component={Home} />\n          <Route exact path='/learn' component={Learn} />\n          <Route component={NotFound} />\n        </Switch>\n      </Router>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}